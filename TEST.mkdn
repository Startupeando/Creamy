Creamy
======

A file-based content management system as simple as Perch.

## Usage

1. Open `creamy.php` with a text editor and configure usernames and
   passwords.

2. Upload `creamy.php` and the `creamy` folder to your server.

3. Call creamy within your static pages:
    `<?php include("creamy.php"); ?>`

4. Create a content block (an editable region) wherever you want:
    `<?php Creamy::content("news"); ?>`

5. Open the backend at `example.com/creamy` and edit the content blocks.
   Creamy will put the content inside a `contentblock.mkdn` file
   so you can also edit these markdown files directly with your 
   favorite text editor.

## FAQ

#### Q: Why not use perch instead?  
A: Creamy is free software. You can modify it to your heart's content.
Furthermore it's file based. That means you can manage and backup your
site with a text editor and version control and make diffs to see changes.
You don't need a database to run it.

#### Q: Who might want to use it?  
A: Creamy is ideal for small web pages.  
It doesn't get into your way and helps you get some dynamic elements
into otherwise static pages real quick. 
You can create a simple template and publish content in no time.
Hackers can also use source control software like git or svn and a plain
text editor to manage sites.

## Extensions

### Themes

You can put code snippets that you use regularly into a folder called
`theme` (relative to `creamy.php`). Creamy will recognize all content 
blocks within this folder automatically. So if you have a file called
`footer.php` the commmand `<?php Creamy::theme("footer"); ?>` works as expected.

### Plugins (not yet implemented)

Additional functionality can be added by putting a file inside a folder
named `plugins`. See example plugins for details.

## Copyright

Copyright (C) 2011 Matthias Endler  
http://www.matthias-endler.de

## License

GNU General Public License version 3.  
See LICENSE.txt for details.
Creamy?
======

A file-based content management system as simple as Perch.

## Usage

1. Open `creamy.php` with a text editor and configure usernames and
   passwords.

2. Upload `creamy.php` and the `creamy` folder to your server.

3. Call creamy within your static pages:
    ``

4. Create a content block (an editable region) wherever you want:
    ``

5. Open the backend at `example.com/creamy` and edit the content blocks.
   Creamy will put the content inside a `contentblock.mkdn` file
   so you can also edit these markdown files directly with your 
   favorite text editor.

## FAQ

#### Q: Why not use perch instead?  
A: Creamy is free software. You can modify it to your heart\'s content.
Furthermore it\'s file based. That means you can manage and backup your
site with a text editor and version control and make diffs to see changes.
You don\'t need a database to run it.

#### Q: Who might want to use it?  
A: Creamy is ideal for small web pages.  
It doesn\'t get into your way and helps you get some dynamic elements
into otherwise static pages real quick. 
You can create a simple template and publish content in no time.
Hackers can also use source control software like git or svn and a plain
text editor to manage sites.

## Extensions

### Themes

You can put code snippets that you use regularly into a folder called
`theme` (relative to `creamy.php`). Creamy will recognize all content 
blocks within this folder automatically. So if you have a file called
`footer.php` the commmand `` works as expected.

### Plugins (not yet implemented)

Additional functionality can be added by putting a file inside a folder
named `plugins`. See example plugins for details.

## Copyright

Copyright (C) 2011 Matthias Endler  
http://www.matthias-endler.de

## License

GNU General Public License version 3.  
See LICENSE.txt for details.
