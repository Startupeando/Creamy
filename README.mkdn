Creamy
======

A delicous, tiny, file-based content management system as simple as Perch.

## Usage

1. Open `creamy.php` with a text editor and configure usernames and
   passwords.

2. Upload `creamy.php` and the `creamy` folder to your server.

3. Call creamy within your static pages:  
    `<?php require_once("creamy.php"); ?>`

4. Create a content block (an editable region) wherever you want:  
    `<?php Creamy::content("news"); ?>`

5. Open the backend at `example.com/creamy` and edit the content blocks.


## Advanced options

### Markdown support

Content areas (the text files included in your page) can be formatted with [Markdown][1].  
The syntax is easy to learn and makes for great formatting.

### Themes

#### Templating engine

Creamy uses twig for templating.  
It's pretty awesome. There is [lots of documentation][2].

#### Code snippets (themes)

Code snippets are common parts of a website which will not be editable 
by the enduser -- like headers, footers and sidebars.
You can put code snippets that you use regularly into a folder called
`theme` (relative to `creamy.php`). So if you have a snippet with the
name `header.html` you can integrate it like this:  

  `<?php Creamy::theme("header"); ?>`

#### Variables

Let's get fancy! You can use variables in your themes and content
blocks:

Let's say you have a variable named {{ title }}Â inside a theme file.
Here is how to fill it with a value:
`<?php $options = array("title" => "Creamy awesomeness!"); ?>`  
`<?php Creamy::theme("header", $options); ?>`  


Or you might want a different layout (here: table.html) 
for a content block and also omit markdown support for this block. 
Here is how to do it:
`<?php $options = array("layout" => "table", "markdown" = false);`  
`Creamy::content("events", $options); ?>`  

#### Bare bones content management

By default creamy will recursively find all markdown files in your
websites subfolder. This means you can manage markdown files from the
backend without ever using them on your website. This is great for ajax
content. Say you have a band website and the profile of each band member
is loaded with an ajax call. Simply put the profiles into separate
markdown files and manage them with creamy.


## FAQ

#### Q: Why create another CMS?
A: Because existing solutions were too bloated. I want a lightweight CMS that happily
adapts to static layouts not the other way round.

#### Q: Why not use perch instead?
A: Creamy is free software. You can modify it to your heart's content.
Furthermore it's file based. You don't need a database to run it.

#### Q: Who might want to use it?
A: Creamy is ideal for small web pages.
It doesn't get into your way and helps you get some dynamic elements
into otherwise static pages real quick.
You can create a simple template and publish content in no time.

Hackers can also use source control software like git or svn and a plain
text editor to manage sites.

## Credits

This work relies on fantastic work by lots of creative people.

- twig by Fabien Potencier, Armin Ronacher and others
- Markdown by John Gruber
- PHP Markdown by Michel Fortin
- WMD Editor by John Fraser of AttackLabs,
  Reverse Engineered by Dana Robinson

## Copyright

Copyright (C) 2011 Matthias Endler  
http://www.matthias-endler.de

## License

GNU General Public License version 3.  
See LICENSE.txt for details.


[1]: http://daringfireball.net/projects/markdown/
[2]: http://www.twig-project.org/documentation
